{"ast":null,"code":"var _jsxFileName = \"/Users/mirsiddika/Desktop/image_finder_app/src/components/image-results/ImageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n  render() {\n    let imageListContent;\n    const images = this.props.images;\n\n    if (images) {\n      imageListContent = React.createElement(GridList, {\n        cols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, images.map(img => React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"by \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, img.user)),\n        actionicon: React.createElement(IconButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(ZoomIn, {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, imageListContent);\n  }\n\n}\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/Users/mirsiddika/Desktop/image_finder_app/src/components/image-results/ImageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","render","imageListContent","images","props","map","img","tags","id","user","largeImageURL","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACjCS,EAAAA,MAAM,GAAG;AACL,QAAIC,gBAAJ;AADK,UAEGC,MAFH,GAEa,KAAKC,KAFlB,CAEGD,MAFH;;AAIL,QAAGA,MAAH,EAAW;AACPD,MAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAI,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCC,MAAM,CAACE,GAAP,CAAWC,GAAG,IACX,oBAAC,QAAD;AACI,QAAA,KAAK,EAAEA,GAAG,CAACC,IADf;AAEI,QAAA,GAAG,EAAED,GAAG,CAACE,EAFb;AAGI,QAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASF,GAAG,CAACG,IAAb,CADP,CAJR;AAQI,QAAA,UAAU,EACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcI;AAAK,QAAA,GAAG,EAAEH,GAAG,CAACI,aAAd;AAA6B,QAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADH,CADD,CADJ;AAyBH,KA1BD,MA0BM;AACFR,MAAAA,gBAAgB,GAAG,IAAnB;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,gBADL,CADJ;AAKH;;AAvCgC;;AAyCrCF,YAAY,CAACW,SAAb,GAAyB;AACrBR,EAAAA,MAAM,EAAEV,SAAS,CAACmB,KAAV,CAAgBC;AADH,CAAzB;AAGA,eAAeb,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n    render() {\n        let imageListContent;\n        const { images} = this.props;\n\n        if(images) {\n            imageListContent = (\n                <GridList cols = {3}>\n                {images.map(img => (\n                    <GridTile\n                        title={img.tags}\n                        key={img.id}\n                        subtitle={\n                            <span>\n                                by <strong>{img.user}</strong>\n                            </span>\n                        }\n                        actionicon={\n                            <IconButton>\n                                <ZoomIn color=\"white\" />\n                            </IconButton>\n                        }\n                        >\n                        <img src={img.largeImageURL} alt=\"\"/>\n                    </GridTile>\n\n                ))}\n                </GridList>\n\n            )\n\n        } else{\n            imageListContent = null;\n        }\n        return (\n            <div>\n                {imageListContent}\n            </div>\n        )\n    }\n}\nImageResults.propTypes = {\n    images: PropTypes.array.isRequired\n}\nexport default ImageResults;\n"]},"metadata":{},"sourceType":"module"}